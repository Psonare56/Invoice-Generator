# nginx.conf

# --------------------------------------- for docker-compose ------------------------------------------
#HTTP server
server {
    listen 80;
    server_name localhost;

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server
server {
    listen 443 ssl;
    server_name localhost;

    # SSL certificate configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    
    # SSL protocols and ciphers (adjust as necessary)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";

    # Root directory for static files (adjust path as needed)
    root /usr/share/nginx/html;
    index index.html;

    # Proxying requests to the application container
    location / {
        proxy_pass http://web:8200;
        # proxy_pass http://invoice-generator-container:8100;   # for docker container (optional)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Include necessary proxy settings if needed
        # proxy_redirect off;
        # proxy_buffering off;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "upgrade";
    }

    # Proxying API requests to the PostgreSQL container
    location /api {
        proxy_pass http://db:5432;
        # proxy_pass http://invoice-generator-postgres-container:5432;  # for docker container (optional)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Error handling for the server block
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# -------------------------------------------------------------------------------------------------------------------

# # HTTP server
# server {
#     listen 80;
#     server_name localhost;

#     # Root directory for static files (adjust path as needed)
#     root /usr/share/nginx/html;
#     index index.html;

#     # Proxying requests to the application container
#     location / {
#         proxy_pass http://web:8200;
# #       proxy_pass http://invoice-generator-container:8100;   # for docker container (optional)
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;

#         # Include necessary proxy settings if needed
#         # proxy_redirect off;
#         # proxy_buffering off;
#         # proxy_set_header Upgrade $http_upgrade;
#         # proxy_set_header Connection "upgrade";
#     }

#     # Proxying API requests to the PostgreSQL container
#     location /api {
#         proxy_pass http://db:5432;
# #       proxy_pass http://invoice-generator-postgres-container:5432;  # for docker container (optional)
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     # Error handling for the server block
#     error_page 500 502 503 504 /50x.html;
#     location = /50x.html {
#         root /usr/share/nginx/html;
#     }

#     # Default server block to handle undefined server names
#     # Remove if not needed or adjust as necessary
#     # server {
#     #     listen 80 default_server;
#     #     server_name _;

#     #     return 404;
#     # }
# }


