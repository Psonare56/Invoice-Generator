version: '3.8'

services:
  db:
    build:
      context: ./postgresql_psycopg2_database
    container_name: invoice-generator-postgres-container
    ports:
      - "5432:5432"
    networks:
      - invoice-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
    container_name: invoice-generator-container
    ports:
      - "8200:8200"
    networks:
      - invoice-network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8200 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: ./nginx-docker
    container_name: nginx-container
    ports:
      - "80:80"
    networks:
      - invoice-network
    depends_on:
      web:
        condition: service_healthy
    volumes:
      - ./nginx-docker/html:/usr/share/nginx/html  # Ensure this points to your website files
    entrypoint: ["/wait-for-it.sh", "web:8200", "--", "/docker-entrypoint.sh"]

networks:
  invoice-network:
    driver: bridge

# --------------------------------------------------------------------
# version: '3.8'

# services:
#   db:
#     build:
#       context: ./postgresql_psycopg2_database
#     container_name: invoice-generator-postgres-container
#     ports:
#       - "5432:5432"
#     networks:
#       - invoice-network
#     volumes:
#       - ./postgres-data:/var/lib/postgresql/data
#     depends_on:
#       - postgres-data

#   web:
#     build:
#       context: .
#     container_name: invoice-generator-app-container
#     ports:
#       - "8200:8200"
#     networks:
#       - invoice-network
#     depends_on:
#       - db 

# networks:
#   invoice-network:
#     driver: bridge

# volumes:
#   postgres-data:
#     driver: local
